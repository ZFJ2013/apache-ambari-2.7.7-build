{
  "Component":{
    "RESOURCEMANAGER":{
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsFailed": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsFailed",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/rm_metrics/cluster/rebootedNMcount": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumRebootedNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapCommittedM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumUnhealthyNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumUnhealthyNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsRunnable": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsRunnable",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsNew": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsNew",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumRebootedNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumRebootedNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/runtime/StartTime": {
        "metric": "java.lang:type=Runtime.StartTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsKilled": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsKilled",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationFailures": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AggregateContainersAllocated": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AggregateContainersAllocated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumLostNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumLostNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_avg_time": {
        "metric": "Hadoop:service=ResourceManager,name=UgiMetrics.LoginSuccessAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/StartTime": {
        "metric": "java.lang:type=Runtime.StartTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_avg_time": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcQueueTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ReservedContainers": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ReservedContainers",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsSubmitted": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsSubmitted",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/SentBytes": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.SentBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumActiveNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumActiveNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/running_300": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).running_300",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/HeapMemoryMax":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/HeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryMax":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memNonHeapUsedM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemNonHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logWarn": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.LogWarn",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTimedWaiting": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsTimedWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcCount": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.GcCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/ReceivedBytes": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.ReceivedBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsBlocked": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsBlocked",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/running_60": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).running_60",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_num_ops": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcQueueTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumDecommissionedNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumDecommissionedNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AllocatedContainers": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AllocatedContainers",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/PendingContainers": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).PendingContainers",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/NumOpenConnections": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.NumOpenConnections",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapUsedM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsWaiting": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcTimeMillis": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.GcTimeMillis",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_num_ops": {
        "metric": "Hadoop:service=ResourceManager,name=UgiMetrics.LoginSuccessNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTerminated": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsTerminated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memMaxM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemMaxM",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/rm_metrics/cluster/unhealthyNMcount": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumUnhealthyNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ReservedVCores": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ReservedVCores",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/rm_metrics/cluster/decommissionedNMcount": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumDecommissionedNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/startTime": {
        "metric": "java.lang:type=Runtime.StartTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ActiveApplications": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ActiveApplications",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AvailableMB": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AvailableMB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapCommittedM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemNonHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/rm_metrics/cluster/nodeManagers": {
        "metric": "Hadoop:service=ResourceManager,name=RMNMInfo.LiveNodeManagers",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/callQueueLen": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.CallQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AllocatedVCores": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AllocatedVCores",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsPending": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsPending",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsCompleted": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsCompleted",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ActiveUsers": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ActiveUsers",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logInfo": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.LogInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsRunning": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsRunning",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/running_1440": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).running_1440",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AvailableVCores": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AvailableVCores",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_num_ops": {
        "metric": "Hadoop:service=ResourceManager,name=UgiMetrics.LoginFailureNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_num_ops": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcProcessingTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ReservedMB": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ReservedMB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logError": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.LogError",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/PendingMB": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).PendingMB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_avg_time": {
        "metric": "Hadoop:service=ResourceManager,name=UgiMetrics.LoginFailureAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationSuccesses": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcAuthorizationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logFatal": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.LogFatal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_avg_time": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcProcessingTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/rm_metrics/cluster/activeNMcount": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumActiveNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationSuccesses": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcAuthenticationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AggregateContainersReleased": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AggregateContainersReleased",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationFailures": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcAuthenticationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/rm_metrics/cluster/lostNMcount": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumLostNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AllocatedMB": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AllocatedMB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/PendingVCores": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).PendingVCores",
        "pointInTime": true,
        "temporal": false
      }
    },
    "NAMENODE":{
      "metrics/dfs/namenode/Used": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Used",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/TotalLoad": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.TotalLoad",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memMaxM":{
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemMaxM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/dfs/FSNamesystem/BlockCapacity": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.BlockCapacity",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/TotalFiles": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.TotalFiles",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/HostName": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.HostName",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/GetListingOps": {
        "metric": "Hadoop:service=NameNode,name=NameNode.GetListingOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/UpgradeFinalized": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.UpgradeFinalized",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getProtocolVersion_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getProtocolVersion_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/fsync_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.fsync_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_avg_time": {
        "metric": "Hadoop:service=NameNode,name=ugi.loginSuccess_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/Safemode": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Safemode",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/CorruptBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystemMetrics.CorruptBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/LiveNodes": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.LiveNodes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/renewLease_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.renewLease_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getFileInfo_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getFileInfo_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityRemaining": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityRemaining",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/PercentRemaining": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.PercentRemaining",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapUsedM": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemNonHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/complete_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.complete_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityTotalGB": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityTotalGB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getBlockLocations_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getBlockLocations_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/AddBlockOps": {
        "metric": "Hadoop:service=NameNode,name=NameNode.AddBlockOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityUsedGB": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityUsedGB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Syncs_avg_time": {
        "metric": "Hadoop:service=NameNode,name=NameNode.Syncs_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsBlocked": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsBlocked",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcQueueTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/PercentUsed": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.PercentUsed",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/DecomNodes": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.DecomNodes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/blockReport_avg_time": {
        "metric": "Hadoop:service=NameNode,name=NameNode.blockReport_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/NonDfsUsedSpace": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.NonDfsUsedSpace",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/UpgradeFinalized": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.UpgradeFinalized",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getFileInfo_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getFileInfo_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getEditLogSize_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getEditLogSize_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_num_ops": {
        "metric": "Hadoop:service=NameNode,name=ugi.loginSuccess_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReceived_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.blockReceived_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Safemode": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Safemode",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/FilesCreated": {
        "metric": "Hadoop:service=NameNode,name=NameNode.FilesCreated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/addBlock_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.addBlock_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/DecomNodes": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.DecomNodes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityUsed": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityUsed",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/NonHeapMemoryUsed": {
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapCommittedM": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemNonHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/DeadNodes": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.DeadNodes",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/PercentUsed": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.PercentUsed",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Free": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Free",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Total": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Total",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/GetBlockLocations": {
        "metric": "Hadoop:service=NameNode,name=NameNode.GetBlockLocations",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_num_ops": {
        "metric": "Hadoop:service=NameNode,name=ugi.loginFailure_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/fsync_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.fsync_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/HeapMemoryMax": {
        "metric": "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/create_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.create_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/PendingReplicationBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.PendingReplicationBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/UnderReplicatedBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystemMetrics.UnderReplicatedBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/FileInfoOps": {
        "metric": "Hadoop:service=NameNode,name=NameNode.FileInfoOps",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/MissingBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystemMetrics.MissingBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/sendHeartbeat_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.sendHeartbeat_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcProcessingTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReport_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.blockReport_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/CapacityRemaining": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystemState.CapacityRemaining",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationSuccesses": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcAuthenticationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/PendingDeletionBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.PendingDeletionBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationFailures": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcAuthenticationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getEditLogSize_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getEditLogSize_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapCommittedM": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/FilesInGetListingOps": {
        "metric": "Hadoop:service=NameNode,name=NameNode.FilesInGetListingOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsRunnable": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsRunnable",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/BlocksTotal": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystemMetrics.BlocksTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityTotal": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/complete_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.complete_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/LiveNodes": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.LiveNodes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsNew": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsNew",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollFsImage_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.rollFsImage_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationFailures": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Syncs_num_ops": {
        "metric": "Hadoop:service=NameNode,name=NameNode.Syncs_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/StartTime": {
        "metric": "java.lang:type=Runtime.StartTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcQueueTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReceived_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.blockReceived_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollEditLog_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.rollEditLog_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/DeadNodes": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.DeadNodes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/SentBytes": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.SentBytes",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/HeapMemoryUsed": {
        "metric": "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/FilesTotal": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.FilesTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Version": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Version",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logWarn": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.LogWarn",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/ExcessBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.ExcessBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTimedWaiting": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsTimedWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcCount": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.GcCount",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/PercentRemaining": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.PercentRemaining",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/ReceivedBytes": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.ReceivedBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/blockReport_num_ops": {
        "metric": "Hadoop:service=NameNode,name=NameNode.blockReport_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/NonHeapMemoryMax": {
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollFsImage_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.rollFsImage_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/NumOpenConnections": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.NumOpenConnections",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapUsedM": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/ScheduledReplicationBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.ScheduledReplicationBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsWaiting": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/BlocksTotal": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.BlocksTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcTimeMillis": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.GcTimeMillis",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getBlockLocations_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getBlockLocations_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Transactions_num_ops": {
        "metric": "Hadoop:service=NameNode,name=NameNode.Transactions_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/create_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.create_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/CapacityTotal": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Total",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTerminated": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsTerminated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityRemainingGB": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityRemainingGB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Transactions_avg_time": {
        "metric": "Hadoop:service=NameNode,name=NameNode.Transactions_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/MissingBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.MissingBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Threads": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Threads",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/callQueueLen": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.CallQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CorruptBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CorruptBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReport_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.blockReport_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/TotalFiles": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.TotalFiles",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logInfo": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.LogInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/NameDirStatuses": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.NameDirStatuses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getListing_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getListing_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollEditLog_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.rollEditLog_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/addBlock_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.addBlock_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcProcessingTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/CapacityUsed": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Used",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/UnderReplicatedBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.UnderReplicatedBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/sendHeartbeat_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.sendHeartbeat_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/CreateFileOps": {
        "metric": "Hadoop:service=NameNode,name=NameNode.CreateFileOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logError": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.LogError",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_avg_time": {
        "metric": "Hadoop:service=NameNode,name=ugi.loginFailure_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getProtocolVersion_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getProtocolVersion_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationSuccesses": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcAuthorizationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "ServiceComponentInfo/Version": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Version",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getListing_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.getListing_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logFatal": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.LogFatal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/NonDfsUsedSpace": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.NonDfsUsedSpace",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/renewLease_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.renewLease_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/TotalBlocks": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.TotalBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityNonDFSUsed": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityNonDFSUsed",
        "pointInTime": true,
        "temporal": false
      }
    },
    "JOBTRACKER":{

      "ServiceComponentInfo/AliveNodes":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.AliveNodesInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/BlackListedNodes":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.BlacklistedNodesInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/GrayListedNodes":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.GraylistedNodesInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/HeapMemoryMax":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/HeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/NonHeapMemoryMax":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/NonHeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/jobs_completed":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.jobs_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/jobs_submitted":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.jobs_submitted",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/reserved_map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.reserved_map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/reserved_reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.reserved_reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/running_0":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_0",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/running_1440":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_1440",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/running_300":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_300",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/running_60":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_60",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/waiting_maps":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.waiting_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Queue/waiting_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.waiting_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/StartTime":{
        "metric" : "java.lang:type=Runtime.StartTime",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Version":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.Version",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobs_running":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.jobs_running",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/jobs_completed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/jobs_running":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_running",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/jobs_submitted":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_submitted",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/occupied_map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.occupied_map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/occupied_reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.occupied_reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/reserved_map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reserved_map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/reserved_reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reserved_reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/running_maps":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.running_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/running_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.running_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/waiting_maps":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.waiting_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/jobtracker/waiting_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.waiting_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/gcCount":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.gcCount",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/gcTimeMillis":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.gcTimeMillis",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logError":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.logError",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logFatal":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.logFatal",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logInfo":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.logInfo",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logWarn":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.logWarn",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memHeapCommittedM":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.memHeapCommittedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memHeapUsedM":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.memHeapUsedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memNonHeapCommittedM":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.memNonHeapCommittedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memNonHeapUsedM":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.memNonHeapUsedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsBlocked":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsBlocked",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsNew":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsNew",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsRunnable":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsRunnable",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsTerminated":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsTerminated",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsTimedWaiting":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsTimedWaiting",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsWaiting":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsWaiting",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/jobs_completed":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.jobs_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/jobs_submitted":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.jobs_submitted",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/reserved_map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.reserved_map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/reserved_reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.reserved_reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/running_0":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_0",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/running_1440":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_1440",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/running_300":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_300",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/running_60":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_60",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/waiting_maps":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.waiting_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/waiting_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.waiting_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/jobs_running":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.jobs_running",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_completed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_running":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_running",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_submitted":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_submitted",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/blacklisted_maps":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.blacklisted_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/blacklisted_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.blacklisted_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/maps_launched":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.maps_launched",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/maps_completed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.maps_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/maps_failed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.maps_failed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduces_launched":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduces_launched",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduces_completed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduces_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduces_failed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduces_failed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_failed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_failed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_killed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_killed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_preparing":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_preparing",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/maps_killed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.maps_killed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduces_killed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduces_killed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/trackers":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.trackers",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/trackers_blacklisted":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.trackers_blacklisted",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/trackers_graylisted":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.trackers_graylisted",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/trackers_decommissioned":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.trackers_decommissioned",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/heartbeats":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.heartbeats",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/occupied_map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.occupied_map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/occupied_reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.occupied_reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reserved_map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reserved_map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reserved_reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reserved_reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/running_maps":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.running_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/running_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.running_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/waiting_maps":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.waiting_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/waiting_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.waiting_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/Hostname":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.Hostname",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/Version":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.Version",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/ConfigVersion":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.ConfigVersion",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/ThreadCount":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.ThreadCount",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/SummaryJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.SummaryJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/AliveNodesInfoJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.AliveNodesInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/BlacklistedNodesInfoJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.BlacklistedNodesInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/GraylistedNodesInfoJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.GraylistedNodesInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/QueueInfoJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.QueueInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/NumOpenConnections":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.NumOpenConnections",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/ReceivedBytes":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.ReceivedBytes",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcProcessingTime_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.RpcProcessingTime_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcProcessingTime_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.RpcProcessingTime_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcQueueTime_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.RpcQueueTime_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcQueueTime_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.RpcQueueTime_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/SentBytes":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.SentBytes",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/callQueueLen":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.callQueueLen",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthenticationFailures":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.rpcAuthenticationFailures",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthenticationSuccesses":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.rpcAuthenticationSuccesses",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthorizationFailures":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthorizationSuccesses":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.rpcAuthorizationSuccesses",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/addBlock_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.addBlock_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/addBlock_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.addBlock_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/blockReceived_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.blockReceived_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/blockReceived_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.blockReceived_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/blockReport_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.blockReport_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/blockReport_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.blockReport_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/complete_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.complete_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/complete_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.complete_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/create_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.create_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/create_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.create_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/fsync_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.fsync_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/fsync_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.fsync_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getBlockLocations_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getBlockLocations_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getBlockLocations_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getBlockLocations_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getEditLogSize_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getEditLogSize_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getEditLogSize_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getEditLogSize_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getFileInfo_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getFileInfo_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getFileInfo_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getFileInfo_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getListing_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getListing_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getListing_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getListing_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getProtocolVersion_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getProtocolVersion_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getProtocolVersion_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getProtocolVersion_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/renewLease_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.renewLease_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/renewLease_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.renewLease_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/rollEditLog_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.rollEditLog_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/rollEditLog_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.rollEditLog_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/rollFsImage_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.rollFsImage_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/rollFsImage_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.rollFsImage_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/sendHeartbeat_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.sendHeartbeat_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/sendHeartbeat_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.sendHeartbeat_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/ugi/loginFailure_avg_time":{
        "metric":"Hadoop:service=JobTracker,name=ugi.loginFailure_avg_time",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/ugi/loginFailure_num_ops":{
        "metric":"Hadoop:service=JobTracker,name=ugi.loginFailure_num_ops",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/ugi/loginSuccess_avg_time":{
        "metric":"Hadoop:service=JobTracker,name=ugi.loginSuccess_avg_time",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/ugi/loginSuccess_num_ops":{
        "metric":"Hadoop:service=JobTracker,name=ugi.loginSuccess_num_ops",
        "pointInTime":true,
        "temporal":false
      }
    },
    "HBASE_MASTER":{
      "ServiceComponentInfo/AverageLoad":{
        "metric" : "hadoop:service=Master,name=Master.AverageLoad",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/HeapMemoryMax":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/HeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/NonHeapMemoryMax":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/NonHeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/MasterActiveTime":{
        "metric" : "hadoop:service=Master,name=Master.MasterActiveTime",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/MasterStartTime":{
        "metric" : "hadoop:service=Master,name=Master.MasterStartTime",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/RegionsInTransition":{
        "metric" : "hadoop:service=Master,name=Master.RegionsInTransition",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Revision":{
        "metric" : "hadoop:service=HBase,name=Info.revision",
        "pointInTime" : true,
        "temporal" : false
      },
      "ServiceComponentInfo/Version":{
        "metric" : "hadoop:service=HBase,name=Info.version",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/hbase/master/ClusterId":{
        "metric":"hadoop:service=Master,name=Master.ClusterId",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/MasterStartTime":{
        "metric":"hadoop:service=Master,name=Master.MasterStartTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/MasterActiveTime":{
        "metric":"hadoop:service=Master,name=Master.MasterActiveTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/Coprocessors":{
        "metric":"hadoop:service=Master,name=Master.Coprocessors",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/ServerName":{
        "metric":"hadoop:service=Master,name=Master.ServerName",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/AverageLoad":{
        "metric":"hadoop:service=Master,name=Master.AverageLoad",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/RegionsInTransition":{
        "metric":"hadoop:service=Master,name=Master.RegionsInTransition",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/RegionServers":{
        "metric":"hadoop:service=Master,name=Master.RegionServers",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/ZookeeperQuorum":{
        "metric":"hadoop:service=Master,name=Master.ZookeeperQuorum",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/DeadRegionServers":{
        "metric":"hadoop:service=Master,name=Master.DeadRegionServers",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/IsActiveMaster":{
        "metric":"hadoop:service=Master,name=Master.IsActiveMaster",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitTimeNumOps":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitTimeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitTimeAvgTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitTimeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitTimeMinTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitTimeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitTimeMaxTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitTimeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitSizeNumOps":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitSizeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitSizeAvgTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitSizeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitSizeMinTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitSizeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitSizeMaxTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitSizeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/cluster_requests":{
        "metric":"hadoop:service=Master,name=MasterStatistics.cluster_requests",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/revision":{
        "metric":"hadoop:service=HBase,name=Info.revision",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsUser":{
        "metric":"hadoop:service=HBase,name=Info.hdfsUser",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsDate":{
        "metric":"hadoop:service=HBase,name=Info.hdfsDate",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsUrl":{
        "metric":"hadoop:service=HBase,name=Info.hdfsUrl",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/date":{
        "metric":"hadoop:service=HBase,name=Info.date",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsRevision":{
        "metric":"hadoop:service=HBase,name=Info.hdfsRevision",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/user":{
        "metric":"hadoop:service=HBase,name=Info.user",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsVersion":{
        "metric":"hadoop:service=HBase,name=Info.hdfsVersion",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/url":{
        "metric":"hadoop:service=HBase,name=Info.url",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/version":{
        "metric":"hadoop:service=HBase,name=Info.version",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assignNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assignNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assignAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assignAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assignMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assignMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assignMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assignMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcSlowResponseNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcSlowResponseAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcSlowResponseMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcSlowResponseMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getStoreFileListNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getStoreFileListNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getStoreFileListAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getStoreFileListAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getStoreFileListMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getStoreFileListMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getStoreFileListMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getStoreFileListMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersion.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersion.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersion.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersion.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatus.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatus.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatus.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatus.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/moveNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.moveNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/moveAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.moveAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/moveMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.moveMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/moveMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.moveMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartup.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartup.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartup.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartup.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balance.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balance.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balance.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balance.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/execCoprocessorNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.execCoprocessorNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/execCoprocessorAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.execCoprocessorAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/execCoprocessorMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.execCoprocessorMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/execCoprocessorMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.execCoprocessorMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptorsNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptorsAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptorsMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptorsMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumnNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumnNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumnAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumnAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumnMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumnMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumnMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumnMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offline.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offline.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offline.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offline.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/multiNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.multiNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/multiAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.multiAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/multiMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.multiMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/multiMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.multiMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/bulkLoadHFilesNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/bulkLoadHFilesAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/bulkLoadHFilesMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/bulkLoadHFilesMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/putNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.putNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/putAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.putAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/putMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.putMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/putMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.putMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/nextNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.nextNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/nextAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.nextAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/nextMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.nextMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/nextMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.nextMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unlockRowNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unlockRowNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unlockRowAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unlockRowAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unlockRowMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unlockRowMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unlockRowMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unlockRowMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalErrorNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalErrorAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalErrorMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalErrorMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rpcAuthenticationFailures":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rpcAuthenticationFailures",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getRegionInfoNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getRegionInfoNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getRegionInfoAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getRegionInfoAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getRegionInfoMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getRegionInfoMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getRegionInfoMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getRegionInfoMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openScannerNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openScannerNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openScannerAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openScannerAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openScannerMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openScannerMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openScannerMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openScannerMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offlineNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offlineNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offlineAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offlineAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offlineMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offlineMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offlineMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offlineMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatusNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatusNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatusAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatusAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatusMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatusMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatusMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatusMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcProcessingTime_num_ops":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcProcessingTime_avg_time":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcProcessingTimeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcProcessingTimeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/move.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/move.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/move.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/move.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getLastFlushTimeNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getLastFlushTimeAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getLastFlushTimeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getLastFlushTimeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdownNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdownNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdownAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdownAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdownMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdownMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdownMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdownMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionsNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionsNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionsAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionsAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionsMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionsMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionsMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionsMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClosestRowBeforeNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClosestRowBeforeAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClosestRowBeforeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClosestRowBeforeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHServerInfoNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHServerInfoNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHServerInfoAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHServerInfoAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHServerInfoMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHServerInfoMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHServerInfoMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHServerInfoMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignatureNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignatureAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignatureMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignatureMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicationCallQueueLen":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicationCallQueueLen",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/SentBytes":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.SentBytes",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/existsNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.existsNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/existsAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.existsAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/existsMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.existsMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/existsMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.existsMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdown.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdown.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdown.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdown.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartupNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartupNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartupAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartupAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartupMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartupMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartupMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartupMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/compactRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.compactRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/compactRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.compactRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/compactRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.compactRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/compactRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.compactRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassign.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassign.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassign.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassign.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitchNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitchNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitchAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitchAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitchMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitchMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitchMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitchMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rollHLogWriterNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rollHLogWriterNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rollHLogWriterAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rollHLogWriterAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rollHLogWriterMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rollHLogWriterMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rollHLogWriterMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rollHLogWriterMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/splitRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.splitRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/splitRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.splitRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/splitRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.splitRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/splitRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.splitRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/ReceivedBytes":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.ReceivedBytes",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunning.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunning.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunning.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunning.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumn.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumn.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumn.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumn.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getOnlineRegionsNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getOnlineRegionsAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getOnlineRegionsMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getOnlineRegionsMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignature.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignature.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignature.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignature.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatusNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatusNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatusAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatusAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatusMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatusMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatusMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatusMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitch.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitch.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitch.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitch.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/appendNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.appendNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/appendAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.appendAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/appendMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.appendMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/appendMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.appendMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getBlockCacheColumnFamilySummariesNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getBlockCacheColumnFamilySummariesAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getBlockCacheColumnFamilySummariesMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getBlockCacheColumnFamilySummariesMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitchNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitchAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitchMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitchMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMasterNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMasterNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMasterAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMasterAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMasterMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMasterMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMasterMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMasterMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/priorityCallQueueLen":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.priorityCallQueueLen",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndPutNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndPutNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndPutAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndPutAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndPutMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndPutMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndPutMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndPutMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumnNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumnNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumnAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumnAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumnMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumnMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumnMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumnMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaster.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaster.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaster.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaster.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/callQueueLen":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.callQueueLen",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicateLogEntriesNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicateLogEntriesAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicateLogEntriesMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicateLogEntriesMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rpcAuthorizationSuccesses":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rpcAuthorizationSuccesses",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementColumnValueNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementColumnValueNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementColumnValueAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementColumnValueAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementColumnValueMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementColumnValueMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementColumnValueMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementColumnValueMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/flushRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.flushRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/flushRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.flushRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/flushRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.flushRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/flushRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.flushRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassignNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassignNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassignAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassignAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassignMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassignMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassignMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassignMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatus.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatus.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatus.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatus.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalError.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalError.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalError.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalError.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/NumOpenConnections":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.NumOpenConnections",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rpcAuthenticationSuccesses":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rpcAuthenticationSuccesses",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/mutateRowNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.mutateRowNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/mutateRowAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.mutateRowAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/mutateRowMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.mutateRowMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/mutateRowMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.mutateRowMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rpcAuthorizationFailures":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rpcAuthorizationFailures",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcQueueTime_num_ops":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcQueueTime_avg_time":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcQueueTimeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcQueueTimeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndDeleteNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndDeleteNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndDeleteAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndDeleteAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndDeleteMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndDeleteMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndDeleteMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndDeleteMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunningNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunningNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunningAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunningAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunningMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunningMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunningMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunningMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumnNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumnNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumnAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumnAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumnMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumnMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumnMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumnMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/lockRowNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.lockRowNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/lockRowAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.lockRowAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/lockRowMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.lockRowMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/lockRowMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.lockRowMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumn.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumn.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumn.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumn.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReport.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReport.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReport.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReport.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getCompactionStateNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getCompactionStateNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getCompactionStateAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getCompactionStateAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getCompactionStateMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getCompactionStateMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getCompactionStateMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getCompactionStateMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assign.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assign.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assign.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assign.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReportNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReportNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReportAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReportAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReportMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReportMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReportMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReportMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumn.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumn.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumn.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumn.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptors.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptors.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptors.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptors.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      }
    },
    "HBASE_REGIONSERVER":{
      "metrics/hbase/regionserver/slowPutCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowPutCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/percentFilesLocal": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.percentFilesLocal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_min": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_min",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheFree": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheFreeSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/mutationsWithoutWALSize": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.mutationsWithoutWALSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheMissCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheMissCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/flushQueueSize": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.flushQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_99th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_99th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_num_ops": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/slowAppendCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowAppendCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheSize": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_num_ops": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/slowIncrementCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowIncrementCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheEvictedCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheEvictionCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_95th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_95th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/compactionQueueSize": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.compactionQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_median": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_median",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_mean": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_mean",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/slowGetCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowGetCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_75th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_75th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/readRequestsCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.readRequestCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_min": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_min",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/storefileIndexSizeMB": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeFileIndexSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_median": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_median",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_max": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_max",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/totalStaticIndexSizeKB": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.staticIndexSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_num_ops": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_mean": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_mean",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/requests": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.totalRequestCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/storefiles": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeFileCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/mutationsWithoutWALCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.mutationsWithoutWALCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/writeRequestsCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.writeRequestCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_median": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_median",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/slowDeleteCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowDeleteCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_99th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_99th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/stores": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_min": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_min",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_95th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_95th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_95th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_95th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/memstoreSizeMB": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.memStoreSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_max": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_max",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_mean": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_mean",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_75th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_75th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_max": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_max",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_75th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_75th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/regions": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.regionCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/totalStaticBloomSizeKB": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.staticBloomSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheHitCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheHitCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_99th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_99th_percentile",
        "pointInTime": true,
        "temporal": false
      }
    },
    "HISTORYSERVER":{
      "metrics/rpc/ReceivedBytes": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.ReceivedBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/SentBytes": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.SentBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_num_ops": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcQueueTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_avg_time": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcQueueTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_num_ops": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcProcessingTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_avg_time": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcProcessingTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationFailures": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcAuthenticationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationSuccesses": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcAuthenticationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationFailures": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationSuccesses": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcAuthorizationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/NumOpenConnections": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.NumOpenConnections",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/callQueueLen": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.CallQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemNonHeapUsedM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemNonHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemNonHeapCommittedM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemNonHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemHeapUsedM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemHeapCommittedM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemMaxM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemMaxM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcCountCopy": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcCountCopy",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcTimeMillisCopy": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcTimeMillisCopy",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcCountMarkSweepCompact": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcCountMarkSweepCompact",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcTimeMillisMarkSweepCompact": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcTimeMillisMarkSweepCompact",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcTimeMillis": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcTimeMillis",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsNew": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsNew",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsRunnable": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsRunnable",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsBlocked": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsBlocked",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsWaiting": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsTimedWaiting": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsTimedWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsTerminated": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsTerminated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/LogFatal": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.LogFatal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/LogError": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.LogError",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/LogWarn": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.LogWarn",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/LogInfo": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.LogInfo",
        "pointInTime": true,
        "temporal": false
      },




      "metrics/Memory/HeapMemoryMax":{
        "metric": "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/HeapMemoryUsed":{
        "metric": "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/HeapMemoryCommitted":{
        "metric": "java.lang:type=Memory.HeapMemoryUsage[committed]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/HeapMemoryInit":{
        "metric": "java.lang:type=Memory.HeapMemoryUsage[init]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/NonHeapMemoryMax":{
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/NonHeapMemoryUsed":{
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/NonHeapMemoryCommitted":{
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[committed]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/NonHeapMemoryInit":{
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[init]",
        "pointInTime" : true,
        "temporal" : false
      },



      "metrics/MBeanServerDelegate/MBeanServerId": {
        "metric": "JMImplementation:type=MBeanServerDelegate.MBeanServerId",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/SpecificationName": {
        "metric": "JMImplementation:type=MBeanServerDelegate.SpecificationName",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/SpecificationVersion": {
        "metric": "JMImplementation:type=MBeanServerDelegate.SpecificationVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/SpecificationVendor": {
        "metric": "JMImplementation:type=MBeanServerDelegate.SpecificationVendor",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/ImplementationName": {
        "metric": "JMImplementation:type=MBeanServerDelegate.ImplementationName",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/ImplementationVersion": {
        "metric": "JMImplementation:type=MBeanServerDelegate.ImplementationVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/ImplementationVendor": {
        "metric": "JMImplementation:type=MBeanServerDelegate.ImplementationVendor",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/StartupProgress/ElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.ElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/PercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.PercentComplete",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingFsImageCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingFsImageCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingFsImageElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingFsImageElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingFsImageTotal": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingFsImageTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingFsImagePercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingFsImagePercentComplete",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingEditsCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingEditsCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingEditsElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingEditsElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingEditsTotal": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingEditsTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingEditsPercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingEditsPercentComplete",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SavingCheckpointCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SavingCheckpointCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SavingCheckpointElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SavingCheckpointElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SavingCheckpointTotal": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SavingCheckpointTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SavingCheckpointPercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SavingCheckpointPercentComplete",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SafeModeCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SafeModeCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SafeModeElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SafeModeElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SafeModeTotal": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SafeModeTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SafeModePercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SafeModePercentComplete",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/HotSpotDiagnostic/DiagnosticOptions": {
        "metric": "com.sun.management:type=HotSpotDiagnostic.DiagnosticOptions",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/MemoryManager/MemoryPoolNames": {
        "metric": "java.lang:type=MemoryManager,name=CodeCacheManager.MemoryPoolNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryManager/Name": {
        "metric": "java.lang:type=MemoryManager,name=CodeCacheManager.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryManager/Valid": {
        "metric": "java.lang:type=MemoryManager,name=CodeCacheManager.Valid",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryManager/ObjectName": {
        "metric": "java.lang:type=MemoryManager,name=CodeCacheManager.ObjectName",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/Logging/LoggerNames": {
        "metric": "java.util.logging:type=Logging.LoggerNames",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/UgiMetrics/LoginSuccessNumOps": {
        "metric": "Hadoop:service=JobHistoryServer,name=UgiMetrics.LoginSuccessNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/UgiMetrics/LoginSuccessAvgTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=UgiMetrics.LoginSuccessAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/UgiMetrics/LoginFailureNumOps": {
        "metric": "Hadoop:service=JobHistoryServer,name=UgiMetrics.LoginFailureNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/UgiMetrics/LoginFailureAvgTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=UgiMetrics.LoginFailureAvgTime",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/MemoryPool/SurvivorSpace/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/CollectionUsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/CollectionUsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/CollectionUsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/Name": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/Type": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.Valid",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/Threading/ThreadAllocatedMemoryEnabled": {
        "metric": "java.lang:type=Threading.ThreadAllocatedMemoryEnabled",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadAllocatedMemorySupported": {
        "metric": "java.lang:type=Threading.ThreadAllocatedMemorySupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/DaemonThreadCount": {
        "metric": "java.lang:type=Threading.DaemonThreadCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/PeakThreadCount": {
        "metric": "java.lang:type=Threading.PeakThreadCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/CurrentThreadCpuTimeSupported": {
        "metric": "java.lang:type=Threading.CurrentThreadCpuTimeSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ObjectMonitorUsageSupported": {
        "metric": "java.lang:type=Threading.ObjectMonitorUsageSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/SynchronizerUsageSupported": {
        "metric": "java.lang:type=Threading.SynchronizerUsageSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadContentionMonitoringSupported": {
        "metric": "java.lang:type=Threading.ThreadContentionMonitoringSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadCpuTimeEnabled": {
        "metric": "java.lang:type=Threading.ThreadCpuTimeEnabled",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/CurrentThreadCpuTime": {
        "metric": "java.lang:type=Threading.CurrentThreadCpuTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/CurrentThreadUserTime": {
        "metric": "java.lang:type=Threading.CurrentThreadUserTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadCount": {
        "metric": "java.lang:type=Threading.ThreadCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/TotalStartedThreadCount": {
        "metric": "java.lang:type=Threading.TotalStartedThreadCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadCpuTimeSupported": {
        "metric": "java.lang:type=Threading.ThreadCpuTimeSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadContentionMonitoringEnabled": {
        "metric": "java.lang:type=Threading.ThreadContentionMonitoringEnabled",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/AllThreadIds": {
        "metric": "java.lang:type=Threading.AllThreadIds",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/ClassLoading/LoadedClassCount": {
        "metric": "java.lang:type=ClassLoading.LoadedClassCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ClassLoading/UnloadedClassCount": {
        "metric": "java.lang:type=ClassLoading.UnloadedClassCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ClassLoading/TotalLoadedClassCount": {
        "metric": "java.lang:type=ClassLoading.TotalLoadedClassCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ClassLoading/Verbose": {
        "metric": "java.lang:type=ClassLoading.Verbose",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/Runtime/BootClassPath": {
        "metric": "java.lang:type=Runtime.BootClassPath",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/LibraryPath": {
        "metric": "java.lang:type=Runtime.LibraryPath",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/VmName": {
        "metric": "java.lang:type=Runtime.VmName",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/VmVendor": {
        "metric": "java.lang:type=Runtime.VmVendor",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/VmVersion": {
        "metric": "java.lang:type=Runtime.VmVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/BootClassPathSupported": {
        "metric": "java.lang:type=Runtime.BootClassPathSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/StartTime": {
        "metric": "java.lang:type=Runtime.StartTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/InputArguments": {
        "metric": "java.lang:type=Runtime.InputArguments",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/ManagementSpecVersion": {
        "metric": "java.lang:type=Runtime.ManagementSpecVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/SpecName": {
        "metric": "java.lang:type=Runtime.SpecName",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/SpecVendor": {
        "metric": "java.lang:type=Runtime.SpecVendor",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/SpecVersion": {
        "metric": "java.lang:type=Runtime.SpecVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/SystemProperties": {
        "metric": "java.lang:type=Runtime.SystemProperties",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/Uptime": {
        "metric": "java.lang:type=Runtime.Uptime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/Name": {
        "metric": "java.lang:type=Runtime.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/ClassPath": {
        "metric": "java.lang:type=Runtime.ClassPath",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/OperatingSystem/MaxFileDescriptorCount": {
        "metric": "java.lang:type=OperatingSystem.MaxFileDescriptorCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/OpenFileDescriptorCount": {
        "metric": "java.lang:type=OperatingSystem.OpenFileDescriptorCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/CommittedVirtualMemorySize": {
        "metric": "java.lang:type=OperatingSystem.CommittedVirtualMemorySize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/FreePhysicalMemorySize": {
        "metric": "java.lang:type=OperatingSystem.FreePhysicalMemorySize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/FreeSwapSpaceSize": {
        "metric": "java.lang:type=OperatingSystem.FreeSwapSpaceSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/ProcessCpuLoad": {
        "metric": "java.lang:type=OperatingSystem.ProcessCpuLoad",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/ProcessCpuTime": {
        "metric": "java.lang:type=OperatingSystem.ProcessCpuTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/SystemCpuLoad": {
        "metric": "java.lang:type=OperatingSystem.SystemCpuLoad",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/TotalPhysicalMemorySize": {
        "metric": "java.lang:type=OperatingSystem.TotalPhysicalMemorySize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/TotalSwapSpaceSize": {
        "metric": "java.lang:type=OperatingSystem.TotalSwapSpaceSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/AvailableProcessors": {
        "metric": "java.lang:type=OperatingSystem.AvailableProcessors",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/Version": {
        "metric": "java.lang:type=OperatingSystem.Version",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/Arch": {
        "metric": "java.lang:type=OperatingSystem.Arch",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/SystemLoadAverage": {
        "metric": "java.lang:type=OperatingSystem.SystemLoadAverage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/Name": {
        "metric": "java.lang:type=OperatingSystem.Name",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/MemoryPool/PermGen/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/CollectionUsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/CollectionUsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/UsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.UsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/UsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.UsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/CollectionUsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/UsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.UsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/Name": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/Type": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.Valid",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/BufferPool/mapred/Count": {
        "metric": "java.nio:type=BufferPool,name=mapped.Count",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/mapred/MemoryUsed": {
        "metric": "java.nio:type=BufferPool,name=mapped.MemoryUsed",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/mapred/TotalCapacity": {
        "metric": "java.nio:type=BufferPool,name=mapped.TotalCapacity",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/mapred/Name": {
        "metric": "java.nio:type=BufferPool,name=mapped.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/direct/Count": {
        "metric": "java.nio:type=BufferPool,name=direct.Count",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/direct/MemoryUsed": {
        "metric": "java.nio:type=BufferPool,name=direct.MemoryUsed",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/direct/TotalCapacity": {
        "metric": "java.nio:type=BufferPool,name=direct.TotalCapacity",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/direct/Name": {
        "metric": "java.nio:type=BufferPool,name=direct.Name",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/GarbageCollector/MarkSweepCompact/LastGcInfo": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.LastGcInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/CollectionCount": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.CollectionCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/CollectionTime": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.CollectionTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/MemoryPoolNames": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.MemoryPoolNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/Name": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/Valid": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.Valid",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/LastGcInfo": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.LastGcInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/CollectionCount": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.CollectionCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/CollectionTime": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.CollectionTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/MemoryPoolNames": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.MemoryPoolNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/Name": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/Valid": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.Valid",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/MemoryPool/CodeCache/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/UsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.UsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/UsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.UsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/UsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.UsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/Name": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/Type": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.Valid",
        "pointInTime": true,
        "temporal": false
      },

      "metrics/MemoryPool/EdenSpace/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/CollectionUsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/CollectionUsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/CollectionUsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/Name": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/Type": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.Valid",
        "pointInTime": true,
        "temporal": false
      },

      "metrics/MemoryPool/TenuredGen/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/CollectionUsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/CollectionUsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/UsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.UsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/UsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.UsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/CollectionUsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/UsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.UsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/Name": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/Type": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.Valid",
        "pointInTime": true,
        "temporal": false
      }
    }
  },
  "HostComponent":{
    "NAMENODE":{
      "metrics/dfs/namenode/Used": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Used",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/TotalLoad": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.TotalLoad",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memMaxM":{
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemMaxM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/dfs/FSNamesystem/BlockCapacity": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.BlockCapacity",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/TotalFiles": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.TotalFiles",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/GetListingOps": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.GetListingOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/HostName": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.tag.Hostname",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/runtime/StartTime": {
        "metric": "java.lang:type=Runtime.StartTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/UpgradeFinalized": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.UpgradeFinalized",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getProtocolVersion_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.VersionRequestNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/fsync_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.FsyncAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_avg_time": {
        "metric": "Hadoop:service=NameNode,name=UgiMetrics.LoginSuccessAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/renewLease_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.renewLease_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityRemaining": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityRemaining",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getFileInfo_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.GetFileInfoAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/PercentRemaining": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.PercentRemaining",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapUsedM": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemNonHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/complete_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.CompleteAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityTotalGB": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityTotalGB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getBlockLocations_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.GetBlockLocationsNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityUsedGB": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityUsedGB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/AddBlockOps": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.AddBlockOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Syncs_avg_time": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.SyncsAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsBlocked": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsBlocked",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/PercentUsed": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.PercentUsed",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcQueueTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/blockReport_avg_time": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.BlockReportAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/HeapMemoryMax": {
        "metric": "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/HeapMemoryUsed": {
        "metric": "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getFileInfo_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.GetFileInfoNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getEditLogSize_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.GetEditLogManifestAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_num_ops": {
        "metric": "Hadoop:service=NameNode,name=UgiMetrics.LoginSuccessNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReceived_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.BlockReceivedAndDeletedAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/addBlock_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.AddBlockNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/FilesCreated": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.FilesCreated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Safemode": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Safemode",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityUsed": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityUsed",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/DecomNodes": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.DecomNodes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapCommittedM": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemNonHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Free": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Free",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Total": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Total",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/HAState": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.tag#HAState",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/GetBlockLocations": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.GetBlockLocations",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_num_ops": {
        "metric": "Hadoop:service=NameNode,name=UgiMetrics.LoginFailureNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/fsync_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.FsyncNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/NonHeapMemoryMax": {
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/create_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.CreateAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/PendingReplicationBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.PendingReplicationBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/FileInfoOps": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.FileInfoOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/sendHeartbeat_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.SendHeartbeatNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcProcessingTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReport_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.BlockReportNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationSuccesses": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcAuthenticationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/PendingDeletionBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.PendingDeletionBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationFailures": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcAuthenticationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapCommittedM": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getEditLogSize_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.GetEditLogManifestNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/NonHeapMemoryUsed": {
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/FilesInGetListingOps": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.FilesInGetListingOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsRunnable": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsRunnable",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityTotal": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/LiveNodes": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.LiveNodes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/complete_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.CompleteNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsNew": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsNew",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollFsImage_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.rollFsImage_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationFailures": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Syncs_num_ops": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.SyncsNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcQueueTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReceived_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.BlockReceivedAndDeletedNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollEditLog_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.RollEditLogAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/DeadNodes": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.DeadNodes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/SentBytes": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.SentBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/FilesTotal": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.FilesTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Version": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Version",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logWarn": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.LogWarn",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/ExcessBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.ExcessBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTimedWaiting": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsTimedWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcCount": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.GcCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/ReceivedBytes": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.ReceivedBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/blockReport_num_ops": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.BlockReportNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollFsImage_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.rollFsImage_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/NumOpenConnections": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.NumOpenConnections",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapUsedM": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.MemHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/ScheduledReplicationBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.ScheduledReplicationBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsWaiting": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/BlocksTotal": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.BlocksTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcTimeMillis": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.GcTimeMillis",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getBlockLocations_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.GetBlockLocationsAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Transactions_num_ops": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.TransactionsNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/create_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.CreateNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTerminated": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.ThreadsTerminated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityRemainingGB": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityRemainingGB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Transactions_avg_time": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.TransactionsAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/MissingBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.MissingBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/Threads": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.Threads",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/callQueueLen": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.CallQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CorruptBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CorruptBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReport_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.BlockReportAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logInfo": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.LogInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/NameDirStatuses": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.NameDirStatuses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getListing_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.GetListingNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollEditLog_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.RollEditLogNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/addBlock_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.AddBlockAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_num_ops": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcProcessingTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/UnderReplicatedBlocks": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.UnderReplicatedBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/sendHeartbeat_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.SendHeartbeatAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/CreateFileOps": {
        "metric": "Hadoop:service=NameNode,name=NameNodeActivity.CreateFileOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logError": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.LogError",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_avg_time": {
        "metric": "Hadoop:service=NameNode,name=UgiMetrics.LoginFailureAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getProtocolVersion_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.VersionRequestAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationSuccesses": {
        "metric": "Hadoop:service=NameNode,name=RpcActivity.RpcAuthorizationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getListing_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.GetListingAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logFatal": {
        "metric": "Hadoop:service=NameNode,name=JvmMetrics.LogFatal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/NonDfsUsedSpace": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.NonDfsUsedSpace",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/renewLease_avg_time": {
        "metric": "Hadoop:service=NameNode,name=RpcDetailedActivity.renewLease_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/JournalTransactionInfo": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.JournalTransactionInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityNonDFSUsed": {
        "metric": "Hadoop:service=NameNode,name=FSNamesystem.CapacityUsedNonDFS",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/namenode/TotalBlocks": {
        "metric": "Hadoop:service=NameNode,name=NameNodeInfo.TotalBlocks",
        "pointInTime": true,
        "temporal": false
      }
    },
    "DATANODE":{
      "metrics/rpcdetailed/getEditLogSize_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getEditLogSize_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/TotalLoad": {
        "metric": "Hadoop:service=DataNode,name=DataNode.TotalLoad",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapCommittedM": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.MemHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/NonHeapMemoryUsed": {
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/BlockCapacity": {
        "metric": "Hadoop:service=DataNode,name=DataNode.BlockCapacity",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsRunnable": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.ThreadsRunnable",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/complete_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.complete_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsNew": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.ThreadsNew",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollFsImage_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.rollFsImage_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationFailures": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/RpcPort": {
        "metric": "Hadoop:service=DataNode,name=DataNodeInfo.RpcPort",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getProtocolVersion_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getProtocolVersion_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.RpcQueueTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/fsync_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.fsync_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_avg_time": {
        "metric": "Hadoop:service=NameNode,name=UgiMetrics.LoginSuccessAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReceived_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.blockReceived_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollEditLog_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.rollEditLog_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/SentBytes": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.SentBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/renewLease_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.renewLease_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getFileInfo_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getFileInfo_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/FilesTotal": {
        "metric": "Hadoop:service=DataNode,name=DataNode.FilesTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapUsedM": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.MemNonHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/VolumeInfo": {
        "metric": "Hadoop:service=DataNode,name=DataNodeInfo.VolumeInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/complete_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.complete_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logWarn": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.LogWarn",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityTotalGB": {
        "metric": "Hadoop:service=DataNode,name=DataNode.CapacityTotalGB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/ExcessBlocks": {
        "metric": "Hadoop:service=DataNode,name=DataNode.ExcessBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getBlockLocations_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getBlockLocations_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/HttpPort": {
        "metric": "Hadoop:service=DataNode,name=DataNodeInfo.HttpPort",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTimedWaiting": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.ThreadsTimedWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcCount": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.GcCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityUsedGB": {
        "metric": "Hadoop:service=DataNode,name=DataNode.CapacityUsedGB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/ReceivedBytes": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.ReceivedBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/HostName": {
        "metric": "Hadoop:service=DataNode,name=MetricsSystem,sub=Stats.tag.Hostname",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsBlocked": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.ThreadsBlocked",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.RpcQueueTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/HeapMemoryMax": {
        "metric": "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/HeapMemoryUsed": {
        "metric": "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollFsImage_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.rollFsImage_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/NumOpenConnections": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.NumOpenConnections",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getFileInfo_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getFileInfo_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapUsedM": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.MemHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/ScheduledReplicationBlocks": {
        "metric": "Hadoop:service=DataNode,name=DataNode.ScheduledReplicationBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsWaiting": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.ThreadsWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/BlocksTotal": {
        "metric": "Hadoop:service=DataNode,name=DataNode.BlocksTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_num_ops": {
        "metric": "Hadoop:service=NameNode,name=UgiMetrics.LoginSuccessNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getEditLogSize_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getEditLogSize_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getBlockLocations_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getBlockLocations_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcTimeMillis": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.GcTimeMillis",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReceived_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.blockReceived_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/create_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.create_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTerminated": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.ThreadsTerminated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/addBlock_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.addBlock_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CapacityRemainingGB": {
        "metric": "Hadoop:service=DataNode,name=DataNode.CapacityRemainingGB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/MissingBlocks": {
        "metric": "Hadoop:service=DataNode,name=DataNode.MissingBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapCommittedM": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.MemNonHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/callQueueLen": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.CallQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/CorruptBlocks": {
        "metric": "Hadoop:service=DataNode,name=DataNode.CorruptBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/Version": {
        "metric": "Hadoop:service=DataNode,name=DataNodeInfo.Version",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReport_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.blockReport_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logInfo": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.LogInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getListing_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getListing_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/rollEditLog_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.rollEditLog_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/addBlock_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.addBlock_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/NamenodeAddress": {
        "metric": "Hadoop:service=DataNode,name=DataNodeInfo.NamenodeAddresses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.RpcProcessingTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_num_ops": {
        "metric": "Hadoop:service=NameNode,name=UgiMetrics.LoginFailureNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/fsync_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.fsync_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/UnderReplicatedBlocks": {
        "metric": "Hadoop:service=DataNode,name=DataNode.UnderReplicatedBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/NonHeapMemoryMax": {
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/PendingReplicationBlocks": {
        "metric": "Hadoop:service=DataNode,name=DataNode.PendingReplicationBlocks",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/create_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.create_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/sendHeartbeat_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.sendHeartbeat_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logError": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.LogError",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_avg_time": {
        "metric": "Hadoop:service=NameNode,name=UgiMetrics.LoginFailureAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getProtocolVersion_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getProtocolVersion_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationSuccesses": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.RpcAuthorizationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getListing_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.getListing_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/sendHeartbeat_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.sendHeartbeat_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logFatal": {
        "metric": "Hadoop:service=DataNode,name=JvmMetrics.LogFatal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/renewLease_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.renewLease_avg_time",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_avg_time": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.RpcProcessingTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/blockReport_num_ops": {
        "metric": "Hadoop:service=DataNode,name=RpcDetailedActivity.blockReport_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationSuccesses": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.RpcAuthenticationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationFailures": {
        "metric": "Hadoop:service=DataNode,name=RpcActivity.RpcAuthenticationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/FSNamesystem/PendingDeletionBlocks": {
        "metric": "Hadoop:service=DataNode,name=DataNode.PendingDeletionBlocks",
        "pointInTime": true,
        "temporal": false
      }
    },
    "JOBTRACKER":{
      "metrics/jvm/HeapMemoryMax":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/HeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryMax":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/gcCount":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.gcCount",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/gcTimeMillis":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.gcTimeMillis",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logError":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.logError",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logFatal":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.logFatal",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logInfo":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.logInfo",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logWarn":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.logWarn",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memHeapCommittedM":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.memHeapCommittedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memHeapUsedM":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.memHeapUsedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memNonHeapCommittedM":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.memNonHeapCommittedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memNonHeapUsedM":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.memNonHeapUsedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsBlocked":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsBlocked",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsNew":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsNew",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsRunnable":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsRunnable",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsTerminated":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsTerminated",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsTimedWaiting":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsTimedWaiting",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsWaiting":{
        "metric" : "Hadoop:service=JobTracker,name=jvm.threadsWaiting",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/jobs_completed":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.jobs_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/jobs_submitted":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.jobs_submitted",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/reserved_map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.reserved_map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/reserved_reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.reserved_reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/running_0":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_0",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/running_1440":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_1440",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/running_300":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_300",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/running_60":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.running_60",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/waiting_maps":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.waiting_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/waiting_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.waiting_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/Queue/jobs_running":{
        "metric" : "Hadoop:service=JobTracker,name=QueueMetrics,q=default.jobs_running",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_completed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_running":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_running",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_submitted":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_submitted",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/blacklisted_maps":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.blacklisted_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/blacklisted_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.blacklisted_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/maps_launched":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.maps_launched",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/maps_completed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.maps_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/maps_failed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.maps_failed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduces_launched":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduces_launched",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduces_completed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduces_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduces_failed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduces_failed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_failed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_failed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_killed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_killed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/jobs_preparing":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.jobs_preparing",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/maps_killed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.maps_killed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reduces_killed":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reduces_killed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/trackers":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.trackers",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/trackers_blacklisted":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.trackers_blacklisted",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/trackers_graylisted":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.trackers_graylisted",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/trackers_decommissioned":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.trackers_decommissioned",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/heartbeats":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.heartbeats",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/occupied_map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.occupied_map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/occupied_reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.occupied_reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reserved_map_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reserved_map_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/reserved_reduce_slots":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.reserved_reduce_slots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/running_maps":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.running_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/running_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.running_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/waiting_maps":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.waiting_maps",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/waiting_reduces":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerMetrics.waiting_reduces",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/Hostname":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.Hostname",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/Version":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.Version",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/ConfigVersion":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.ConfigVersion",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/ThreadCount":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.ThreadCount",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/SummaryJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.SummaryJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/AliveNodesInfoJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.AliveNodesInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/BlacklistedNodesInfoJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.BlacklistedNodesInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/GraylistedNodesInfoJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.GraylistedNodesInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/jobtracker/QueueInfoJson":{
        "metric" : "Hadoop:service=JobTracker,name=JobTrackerInfo.QueueInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/NumOpenConnections":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.NumOpenConnections",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/ReceivedBytes":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.ReceivedBytes",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcProcessingTime_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.RpcProcessingTime_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcProcessingTime_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.RpcProcessingTime_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcQueueTime_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.RpcQueueTime_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcQueueTime_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.RpcQueueTime_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/SentBytes":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.SentBytes",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/callQueueLen":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.callQueueLen",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthenticationFailures":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.rpcAuthenticationFailures",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthenticationSuccesses":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.rpcAuthenticationSuccesses",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthorizationFailures":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.rpcAuthorizationFailures",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthorizationSuccesses":{
        "metric" : "Hadoop:service=JobTracker,name=RpcActivity.rpcAuthorizationSuccesses",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/addBlock_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.addBlock_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/addBlock_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.addBlock_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/blockReceived_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.blockReceived_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/blockReceived_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.blockReceived_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/blockReport_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.blockReport_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/blockReport_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.blockReport_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/complete_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.complete_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/complete_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.complete_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/create_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.create_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/create_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.create_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/fsync_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.fsync_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/fsync_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.fsync_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getBlockLocations_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getBlockLocations_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getBlockLocations_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getBlockLocations_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getEditLogSize_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getEditLogSize_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getEditLogSize_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getEditLogSize_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getFileInfo_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getFileInfo_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getFileInfo_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getFileInfo_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getListing_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getListing_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getListing_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getListing_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getProtocolVersion_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getProtocolVersion_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getProtocolVersion_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.getProtocolVersion_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/renewLease_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.renewLease_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/renewLease_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.renewLease_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/rollEditLog_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.rollEditLog_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/rollEditLog_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.rollEditLog_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/rollFsImage_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.rollFsImage_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/rollFsImage_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.rollFsImage_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/sendHeartbeat_avg_time":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.sendHeartbeat_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/sendHeartbeat_num_ops":{
        "metric" : "Hadoop:service=JobTracker,name=RpcDetailedActivity.sendHeartbeat_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/ugi/loginFailure_avg_time":{
        "metric":"Hadoop:service=JobTracker,name=ugi.loginFailure_avg_time",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/ugi/loginFailure_num_ops":{
        "metric":"Hadoop:service=JobTracker,name=ugi.loginFailure_num_ops",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/ugi/loginSuccess_avg_time":{
        "metric":"Hadoop:service=JobTracker,name=ugi.loginSuccess_avg_time",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/ugi/loginSuccess_num_ops":{
        "metric":"Hadoop:service=JobTracker,name=ugi.loginSuccess_num_ops",
        "pointInTime":true,
        "temporal":false
      }
    },
    "TASKTRACKER":{
      "metrics/jvm/HeapMemoryMax":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/HeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryMax":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/gcCount":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.gcCount",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/gcTimeMillis":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.gcTimeMillis",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logError":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.logError",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logFatal":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.logFatal",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logInfo":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.logInfo",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/logWarn":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.logWarn",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memHeapCommittedM":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.memHeapCommittedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memHeapUsedM":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.memHeapUsedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memNonHeapCommittedM":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.memNonHeapCommittedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/memNonHeapUsedM":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.memNonHeapUsedM",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsBlocked":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.threadsBlocked",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsNew":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.threadsNew",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsRunnable":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.threadsRunnable",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsTerminated":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.threadsTerminated",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsTimedWaiting":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.threadsTimedWaiting",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsWaiting":{
        "metric" : "Hadoop:service=TaskTracker,name=jvm.threadsWaiting",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/shuffleOutput/shuffle_exceptions_caught":{
        "metric":"Hadoop:service=TaskTracker,name=ShuffleServerMetrics.shuffle_exceptions_caught",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/mapred/shuffleOutput/shuffle_failed_outputs":{
        "metric":"Hadoop:service=TaskTracker,name=ShuffleServerMetrics.shuffle_failed_outputs",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/mapred/shuffleOutput/shuffle_handler_busy_percent":{
        "metric":"Hadoop:service=TaskTracker,name=ShuffleServerMetrics.shuffle_handler_busy_percent",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/mapred/shuffleOutput/shuffle_output_bytes":{
        "metric":"Hadoop:service=TaskTracker,name=ShuffleServerMetrics.shuffle_output_bytes",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/mapred/shuffleOutput/shuffle_success_outputs":{
        "metric":"Hadoop:service=TaskTracker,name=ShuffleServerMetrics.shuffle_success_outputs",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/mapred/tasktracker/maps_running":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerMetrics.maps_running",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/reduces_running":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerMetrics.reduces_running",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/mapTaskSlots":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerMetrics.mapTaskSlots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/reduceTaskSlots":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerMetrics.reduceTaskSlots",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/failedDirs":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerMetrics.failedDirs",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/tasks_completed":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerMetrics.tasks_completed",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/tasks_failed_timeout":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerMetrics.tasks_failed_timeout",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/tasks_failed_ping":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerMetrics.tasks_failed_ping",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/Hostname":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerInfo.Hostname",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/Version":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerInfo.Version",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/ConfigVersion":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerInfo.ConfigVersion",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/JobTrackerUrl":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerInfo.JobTrackerUrl",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/RpcPort":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerInfo.RpcPort",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/HttpPort":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerInfo.HttpPort",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/Healthy":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerInfo.Healthy",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/mapred/tasktracker/TasksInfoJson":{
        "metric" : "Hadoop:service=TaskTracker,name=TaskTrackerInfo.TasksInfoJson",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/NumOpenConnections":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.NumOpenConnections",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/ReceivedBytes":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.ReceivedBytes",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcProcessingTime_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.RpcProcessingTime_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcProcessingTime_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.RpcProcessingTime_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcQueueTime_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.RpcQueueTime_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/RpcQueueTime_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.RpcQueueTime_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/SentBytes":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.SentBytes",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/callQueueLen":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.callQueueLen",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthenticationFailures":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.rpcAuthenticationFailures",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthenticationSuccesses":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.rpcAuthenticationSuccesses",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthorizationFailures":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.rpcAuthorizationFailures",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/rpcAuthorizationSuccesses":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcActivity.rpcAuthorizationSuccesses",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getProtocolVersion_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.getProtocolVersion_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getProtocolVersion_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.getProtocolVersion_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getTask_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.getTask_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getTask_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.getTask_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/statusUpdate_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.statusUpdate_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/statusUpdate_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.statusUpdate_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/done_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.done_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/done_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.done_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getMapCompletionEvents_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.getMapCompletionEvents_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/getMapCompletionEvents_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.getMapCompletionEvents_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/ping_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.ping_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/ping_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.ping_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/commitPending_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.commitPending_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/commitPending_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.commitPending_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/canCommit_num_ops":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.canCommit_num_ops",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpcdetailed/canCommit_avg_time":{
        "metric" : "Hadoop:service=TaskTracker,name=RpcDetailedActivity.canCommit_avg_time",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/ugi/loginFailure_avg_time":{
        "metric":"Hadoop:service=TaskTracker,name=ugi.loginFailure_avg_time",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/ugi/loginFailure_num_ops":{
        "metric":"Hadoop:service=TaskTracker,name=ugi.loginFailure_num_ops",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/ugi/loginSuccess_avg_time":{
        "metric":"Hadoop:service=TaskTracker,name=ugi.loginSuccess_avg_time",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/ugi/loginSuccess_num_ops":{
        "metric":"Hadoop:service=TaskTracker,name=ugi.loginSuccess_num_ops",
        "pointInTime":true,
        "temporal":false
      }
    },
    "HBASE_MASTER":{
      "metrics/hbase/master/ClusterId":{
        "metric":"hadoop:service=Master,name=Master.ClusterId",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/MasterStartTime":{
        "metric":"hadoop:service=Master,name=Master.MasterStartTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/MasterActiveTime":{
        "metric":"hadoop:service=Master,name=Master.MasterActiveTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/Coprocessors":{
        "metric":"hadoop:service=Master,name=Master.Coprocessors",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/ServerName":{
        "metric":"hadoop:service=Master,name=Master.ServerName",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/AverageLoad":{
        "metric":"hadoop:service=Master,name=Master.AverageLoad",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/RegionsInTransition":{
        "metric":"hadoop:service=Master,name=Master.RegionsInTransition",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/RegionServers":{
        "metric":"hadoop:service=Master,name=Master.RegionServers",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/ZookeeperQuorum":{
        "metric":"hadoop:service=Master,name=Master.ZookeeperQuorum",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/DeadRegionServers":{
        "metric":"hadoop:service=Master,name=Master.DeadRegionServers",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/IsActiveMaster":{
        "metric":"hadoop:service=Master,name=Master.IsActiveMaster",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitTimeNumOps":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitTimeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitTimeAvgTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitTimeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitTimeMinTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitTimeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitTimeMaxTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitTimeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitSizeNumOps":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitSizeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitSizeAvgTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitSizeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitSizeMinTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitSizeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/splitSizeMaxTime":{
        "metric":"hadoop:service=Master,name=MasterStatistics.splitSizeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/cluster_requests":{
        "metric":"hadoop:service=Master,name=MasterStatistics.cluster_requests",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/revision":{
        "metric":"hadoop:service=HBase,name=Info.revision",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsUser":{
        "metric":"hadoop:service=HBase,name=Info.hdfsUser",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsDate":{
        "metric":"hadoop:service=HBase,name=Info.hdfsDate",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsUrl":{
        "metric":"hadoop:service=HBase,name=Info.hdfsUrl",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/date":{
        "metric":"hadoop:service=HBase,name=Info.date",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsRevision":{
        "metric":"hadoop:service=HBase,name=Info.hdfsRevision",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/user":{
        "metric":"hadoop:service=HBase,name=Info.user",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/hdfsVersion":{
        "metric":"hadoop:service=HBase,name=Info.hdfsVersion",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/url":{
        "metric":"hadoop:service=HBase,name=Info.url",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/hbase/master/version":{
        "metric":"hadoop:service=HBase,name=Info.version",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/load/AverageLoad":{
        "metric" : "hadoop:service=Master,name=Master.AverageLoad",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/HeapMemoryMax":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/HeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryMax":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/rpc/enableTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assignNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assignNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assignAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assignAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assignMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assignMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assignMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assignMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/enableTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcSlowResponseNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcSlowResponseAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcSlowResponseMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcSlowResponseMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getStoreFileListNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getStoreFileListNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getStoreFileListAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getStoreFileListAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getStoreFileListMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getStoreFileListMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getStoreFileListMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getStoreFileListMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersion.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersion.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersion.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersion.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatus.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatus.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatus.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatus.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/moveNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.moveNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/moveAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.moveAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/moveMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.moveMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/moveMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.moveMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartup.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartup.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartup.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartup.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balance.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balance.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balance.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balance.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/execCoprocessorNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.execCoprocessorNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/execCoprocessorAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.execCoprocessorAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/execCoprocessorMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.execCoprocessorMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/execCoprocessorMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.execCoprocessorMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptorsNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptorsAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptorsMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptorsMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumnNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumnNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumnAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumnAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumnMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumnMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumnMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumnMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offline.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offline.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offline.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offline.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/multiNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.multiNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/multiAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.multiAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/multiMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.multiMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/multiMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.multiMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/bulkLoadHFilesNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/bulkLoadHFilesAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/bulkLoadHFilesMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/bulkLoadHFilesMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/putNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.putNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/putAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.putAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/putMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.putMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/putMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.putMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/nextNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.nextNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/nextAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.nextAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/nextMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.nextMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/nextMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.nextMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unlockRowNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unlockRowNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unlockRowAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unlockRowAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unlockRowMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unlockRowMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unlockRowMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unlockRowMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalErrorNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalErrorAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalErrorMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalErrorMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rpcAuthenticationFailures":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rpcAuthenticationFailures",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getRegionInfoNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getRegionInfoNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getRegionInfoAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getRegionInfoAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getRegionInfoMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getRegionInfoMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getRegionInfoMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getRegionInfoMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openScannerNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openScannerNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openScannerAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openScannerAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openScannerMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openScannerMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openScannerMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openScannerMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offlineNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offlineNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offlineAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offlineAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offlineMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offlineMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/offlineMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.offlineMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatusNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatusNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatusAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatusAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatusMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatusMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAlterStatusMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAlterStatusMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcProcessingTime_num_ops":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcProcessingTime_avg_time":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcProcessingTimeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcProcessingTimeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/move.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/move.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/move.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/move.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getLastFlushTimeNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getLastFlushTimeAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getLastFlushTimeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getLastFlushTimeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdownNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdownNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdownAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdownAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdownMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdownMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdownMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdownMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionsNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionsNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionsAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionsAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionsMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionsMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/openRegionsMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.openRegionsMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClosestRowBeforeNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClosestRowBeforeAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClosestRowBeforeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClosestRowBeforeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHServerInfoNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHServerInfoNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHServerInfoAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHServerInfoAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHServerInfoMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHServerInfoMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHServerInfoMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHServerInfoMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignatureNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignatureAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignatureMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignatureMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicationCallQueueLen":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicationCallQueueLen",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/SentBytes":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.SentBytes",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/existsNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.existsNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/existsAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.existsAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/existsMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.existsMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/existsMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.existsMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdown.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdown.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdown.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/shutdown.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartupNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartupNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartupAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartupAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartupMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartupMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerStartupMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerStartupMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/compactRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.compactRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/compactRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.compactRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/compactRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.compactRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/compactRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.compactRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassign.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassign.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassign.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassign.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitchNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitchNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitchAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitchAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitchMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitchMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitchMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitchMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rollHLogWriterNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rollHLogWriterNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rollHLogWriterAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rollHLogWriterAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rollHLogWriterMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rollHLogWriterMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rollHLogWriterMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rollHLogWriterMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/splitRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.splitRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/splitRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.splitRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/splitRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.splitRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/splitRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.splitRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/ReceivedBytes":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.ReceivedBytes",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunning.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunning.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunning.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunning.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumn.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumn.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumn.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/addColumn.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/createTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getOnlineRegionsNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getOnlineRegionsAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getOnlineRegionsMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getOnlineRegionsMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/closeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.closeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignature.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignature.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignature.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolSignature.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatusNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatusNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatusAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatusAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatusMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatusMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatusMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatusMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitch.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitch.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitch.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/balanceSwitch.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/appendNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.appendNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/appendAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.appendAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/appendMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.appendMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/appendMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.appendMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getBlockCacheColumnFamilySummariesNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getBlockCacheColumnFamilySummariesAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getBlockCacheColumnFamilySummariesMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getBlockCacheColumnFamilySummariesMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitchNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitchAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitchMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitchMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMasterNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMasterNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMasterAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMasterAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMasterMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMasterMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMasterMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMasterMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/priorityCallQueueLen":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.priorityCallQueueLen",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndPutNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndPutNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndPutAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndPutAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndPutMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndPutMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndPutMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndPutMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumnNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumnNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumnAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumnAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumnMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumnMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumnMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumnMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/disableTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaster.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaster.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaster.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaster.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/callQueueLen":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.callQueueLen",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicateLogEntriesNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicateLogEntriesAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicateLogEntriesMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/replicateLogEntriesMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rpcAuthorizationSuccesses":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rpcAuthorizationSuccesses",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/stopMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.stopMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementColumnValueNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementColumnValueNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementColumnValueAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementColumnValueAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementColumnValueMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementColumnValueMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/incrementColumnValueMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.incrementColumnValueMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/flushRegionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.flushRegionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/flushRegionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.flushRegionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/flushRegionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.flushRegionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/flushRegionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.flushRegionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassignNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassignNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassignAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassignAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassignMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassignMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/unassignMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.unassignMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatus.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatus.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatus.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getClusterStatus.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalError.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalError.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalError.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/reportRSFatalError.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/NumOpenConnections":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.NumOpenConnections",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rpcAuthenticationSuccesses":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rpcAuthenticationSuccesses",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/mutateRowNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.mutateRowNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/mutateRowAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.mutateRowAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/mutateRowMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.mutateRowMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/mutateRowMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.mutateRowMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTableNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTableNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTableAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTableAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTableMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTableMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyTableMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyTableMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/rpcAuthorizationFailures":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.rpcAuthorizationFailures",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersionNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersionNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersionAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersionAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersionMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersionMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getProtocolVersionMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getProtocolVersionMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcQueueTime_num_ops":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcQueueTime_avg_time":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcQueueTimeMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/RpcQueueTimeMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndDeleteNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndDeleteNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndDeleteAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndDeleteAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndDeleteMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndDeleteMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/checkAndDeleteMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.checkAndDeleteMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTable.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTable.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTable.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteTable.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunningNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunningNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunningAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunningAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunningMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunningMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/isMasterRunningMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.isMasterRunningMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumnNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumnNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumnAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumnAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumnMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumnMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumnMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumnMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/lockRowNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.lockRowNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/lockRowAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.lockRowAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/lockRowMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.lockRowMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/lockRowMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.lockRowMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumn.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumn.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumn.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/modifyColumn.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReport.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReport.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReport.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReport.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getCompactionStateNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getCompactionStateNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getCompactionStateAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getCompactionStateAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getCompactionStateMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getCompactionStateMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getCompactionStateMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getCompactionStateMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assign.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assign.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assign.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/assign.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReportNumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReportNumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReportAvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReportAvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReportMinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReportMinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/regionServerReportMaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.regionServerReportMaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumn.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumn.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumn.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/deleteColumn.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptors.aboveOneSec.NumOps":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.NumOps",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptors.aboveOneSec.AvgTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.AvgTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptors.aboveOneSec.MinTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.MinTime",
        "pointInTime":true,
        "temporal":false
      },
      "metrics/rpc/getHTableDescriptors.aboveOneSec.MaxTime":{
        "metric":"hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.MaxTime",
        "pointInTime":true,
        "temporal":false
      }
    },
    "HISTORYSERVER":{
      "metrics/rpc/ReceivedBytes": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.ReceivedBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/SentBytes": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.SentBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_num_ops": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcQueueTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_avg_time": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcQueueTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_num_ops": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcProcessingTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_avg_time": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcProcessingTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationFailures": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcAuthenticationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationSuccesses": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcAuthenticationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationFailures": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationSuccesses": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.RpcAuthorizationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/NumOpenConnections": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.NumOpenConnections",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/callQueueLen": {
        "metric": "Hadoop:service=JobHistoryServer,name=RpcActivity.CallQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemNonHeapUsedM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemNonHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemNonHeapCommittedM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemNonHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemHeapUsedM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemHeapCommittedM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/MemMaxM": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.MemMaxM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcCountCopy": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcCountCopy",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcTimeMillisCopy": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcTimeMillisCopy",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcCountMarkSweepCompact": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcCountMarkSweepCompact",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcTimeMillisMarkSweepCompact": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcTimeMillisMarkSweepCompact",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/GcTimeMillis": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.GcTimeMillis",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsNew": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsNew",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsRunnable": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsRunnable",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsBlocked": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsBlocked",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsWaiting": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsTimedWaiting": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsTimedWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/ThreadsTerminated": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.ThreadsTerminated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/LogFatal": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.LogFatal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/LogError": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.LogError",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/LogWarn": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.LogWarn",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/LogInfo": {
        "metric": "Hadoop:service=JobHistoryServer,name=JvmMetrics.LogInfo",
        "pointInTime": true,
        "temporal": false
      },




      "metrics/Memory/HeapMemoryMax":{
        "metric": "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/HeapMemoryUsed":{
        "metric": "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/HeapMemoryCommitted":{
        "metric": "java.lang:type=Memory.HeapMemoryUsage[committed]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/HeapMemoryInit":{
        "metric": "java.lang:type=Memory.HeapMemoryUsage[init]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/NonHeapMemoryMax":{
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/NonHeapMemoryUsed":{
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/NonHeapMemoryCommitted":{
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[committed]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/Memory/NonHeapMemoryInit":{
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[init]",
        "pointInTime" : true,
        "temporal" : false
      },



      "metrics/MBeanServerDelegate/MBeanServerId": {
        "metric": "JMImplementation:type=MBeanServerDelegate.MBeanServerId",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/SpecificationName": {
        "metric": "JMImplementation:type=MBeanServerDelegate.SpecificationName",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/SpecificationVersion": {
        "metric": "JMImplementation:type=MBeanServerDelegate.SpecificationVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/SpecificationVendor": {
        "metric": "JMImplementation:type=MBeanServerDelegate.SpecificationVendor",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/ImplementationName": {
        "metric": "JMImplementation:type=MBeanServerDelegate.ImplementationName",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/ImplementationVersion": {
        "metric": "JMImplementation:type=MBeanServerDelegate.ImplementationVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MBeanServerDelegate/ImplementationVendor": {
        "metric": "JMImplementation:type=MBeanServerDelegate.ImplementationVendor",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/StartupProgress/ElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.ElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/PercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.PercentComplete",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingFsImageCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingFsImageCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingFsImageElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingFsImageElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingFsImageTotal": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingFsImageTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingFsImagePercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingFsImagePercentComplete",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingEditsCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingEditsCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingEditsElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingEditsElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingEditsTotal": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingEditsTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/LoadingEditsPercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.LoadingEditsPercentComplete",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SavingCheckpointCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SavingCheckpointCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SavingCheckpointElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SavingCheckpointElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SavingCheckpointTotal": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SavingCheckpointTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SavingCheckpointPercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SavingCheckpointPercentComplete",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SafeModeCount": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SafeModeCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SafeModeElapsedTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SafeModeElapsedTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SafeModeTotal": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SafeModeTotal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/StartupProgress/SafeModePercentComplete": {
        "metric": "Hadoop:service=JobHistoryServer,name=StartupProgress.SafeModePercentComplete",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/HotSpotDiagnostic/DiagnosticOptions": {
        "metric": "com.sun.management:type=HotSpotDiagnostic.DiagnosticOptions",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/MemoryManager/MemoryPoolNames": {
        "metric": "java.lang:type=MemoryManager,name=CodeCacheManager.MemoryPoolNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryManager/Name": {
        "metric": "java.lang:type=MemoryManager,name=CodeCacheManager.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryManager/Valid": {
        "metric": "java.lang:type=MemoryManager,name=CodeCacheManager.Valid",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryManager/ObjectName": {
        "metric": "java.lang:type=MemoryManager,name=CodeCacheManager.ObjectName",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/Logging/LoggerNames": {
        "metric": "java.util.logging:type=Logging.LoggerNames",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/UgiMetrics/LoginSuccessNumOps": {
        "metric": "Hadoop:service=JobHistoryServer,name=UgiMetrics.LoginSuccessNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/UgiMetrics/LoginSuccessAvgTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=UgiMetrics.LoginSuccessAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/UgiMetrics/LoginFailureNumOps": {
        "metric": "Hadoop:service=JobHistoryServer,name=UgiMetrics.LoginFailureNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/UgiMetrics/LoginFailureAvgTime": {
        "metric": "Hadoop:service=JobHistoryServer,name=UgiMetrics.LoginFailureAvgTime",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/MemoryPool/SurvivorSpace/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/CollectionUsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/CollectionUsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/CollectionUsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/Name": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/Type": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/SurvivorSpace/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Survivor Space.Valid",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/Threading/ThreadAllocatedMemoryEnabled": {
        "metric": "java.lang:type=Threading.ThreadAllocatedMemoryEnabled",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadAllocatedMemorySupported": {
        "metric": "java.lang:type=Threading.ThreadAllocatedMemorySupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/DaemonThreadCount": {
        "metric": "java.lang:type=Threading.DaemonThreadCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/PeakThreadCount": {
        "metric": "java.lang:type=Threading.PeakThreadCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/CurrentThreadCpuTimeSupported": {
        "metric": "java.lang:type=Threading.CurrentThreadCpuTimeSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ObjectMonitorUsageSupported": {
        "metric": "java.lang:type=Threading.ObjectMonitorUsageSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/SynchronizerUsageSupported": {
        "metric": "java.lang:type=Threading.SynchronizerUsageSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadContentionMonitoringSupported": {
        "metric": "java.lang:type=Threading.ThreadContentionMonitoringSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadCpuTimeEnabled": {
        "metric": "java.lang:type=Threading.ThreadCpuTimeEnabled",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/CurrentThreadCpuTime": {
        "metric": "java.lang:type=Threading.CurrentThreadCpuTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/CurrentThreadUserTime": {
        "metric": "java.lang:type=Threading.CurrentThreadUserTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadCount": {
        "metric": "java.lang:type=Threading.ThreadCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/TotalStartedThreadCount": {
        "metric": "java.lang:type=Threading.TotalStartedThreadCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadCpuTimeSupported": {
        "metric": "java.lang:type=Threading.ThreadCpuTimeSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/ThreadContentionMonitoringEnabled": {
        "metric": "java.lang:type=Threading.ThreadContentionMonitoringEnabled",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Threading/AllThreadIds": {
        "metric": "java.lang:type=Threading.AllThreadIds",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/ClassLoading/LoadedClassCount": {
        "metric": "java.lang:type=ClassLoading.LoadedClassCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ClassLoading/UnloadedClassCount": {
        "metric": "java.lang:type=ClassLoading.UnloadedClassCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ClassLoading/TotalLoadedClassCount": {
        "metric": "java.lang:type=ClassLoading.TotalLoadedClassCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ClassLoading/Verbose": {
        "metric": "java.lang:type=ClassLoading.Verbose",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/Runtime/BootClassPath": {
        "metric": "java.lang:type=Runtime.BootClassPath",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/LibraryPath": {
        "metric": "java.lang:type=Runtime.LibraryPath",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/VmName": {
        "metric": "java.lang:type=Runtime.VmName",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/VmVendor": {
        "metric": "java.lang:type=Runtime.VmVendor",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/VmVersion": {
        "metric": "java.lang:type=Runtime.VmVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/BootClassPathSupported": {
        "metric": "java.lang:type=Runtime.BootClassPathSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/StartTime": {
        "metric": "java.lang:type=Runtime.StartTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/InputArguments": {
        "metric": "java.lang:type=Runtime.InputArguments",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/ManagementSpecVersion": {
        "metric": "java.lang:type=Runtime.ManagementSpecVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/SpecName": {
        "metric": "java.lang:type=Runtime.SpecName",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/SpecVendor": {
        "metric": "java.lang:type=Runtime.SpecVendor",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/SpecVersion": {
        "metric": "java.lang:type=Runtime.SpecVersion",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/SystemProperties": {
        "metric": "java.lang:type=Runtime.SystemProperties",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/Uptime": {
        "metric": "java.lang:type=Runtime.Uptime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/Name": {
        "metric": "java.lang:type=Runtime.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/Runtime/ClassPath": {
        "metric": "java.lang:type=Runtime.ClassPath",
        "pointInTime": true,
        "temporal": false
      },


      "metrics/OperatingSystem/MaxFileDescriptorCount": {
        "metric": "java.lang:type=OperatingSystem.MaxFileDescriptorCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/OpenFileDescriptorCount": {
        "metric": "java.lang:type=OperatingSystem.OpenFileDescriptorCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/CommittedVirtualMemorySize": {
        "metric": "java.lang:type=OperatingSystem.CommittedVirtualMemorySize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/FreePhysicalMemorySize": {
        "metric": "java.lang:type=OperatingSystem.FreePhysicalMemorySize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/FreeSwapSpaceSize": {
        "metric": "java.lang:type=OperatingSystem.FreeSwapSpaceSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/ProcessCpuLoad": {
        "metric": "java.lang:type=OperatingSystem.ProcessCpuLoad",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/ProcessCpuTime": {
        "metric": "java.lang:type=OperatingSystem.ProcessCpuTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/SystemCpuLoad": {
        "metric": "java.lang:type=OperatingSystem.SystemCpuLoad",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/TotalPhysicalMemorySize": {
        "metric": "java.lang:type=OperatingSystem.TotalPhysicalMemorySize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/TotalSwapSpaceSize": {
        "metric": "java.lang:type=OperatingSystem.TotalSwapSpaceSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/AvailableProcessors": {
        "metric": "java.lang:type=OperatingSystem.AvailableProcessors",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/Version": {
        "metric": "java.lang:type=OperatingSystem.Version",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/Arch": {
        "metric": "java.lang:type=OperatingSystem.Arch",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/SystemLoadAverage": {
        "metric": "java.lang:type=OperatingSystem.SystemLoadAverage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/OperatingSystem/Name": {
        "metric": "java.lang:type=OperatingSystem.Name",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/MemoryPool/PermGen/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/CollectionUsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/CollectionUsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/UsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.UsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/UsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.UsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/CollectionUsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/UsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.UsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/Name": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/Type": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/PermGen/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Perm Gen.Valid",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/BufferPool/mapred/Count": {
        "metric": "java.nio:type=BufferPool,name=mapped.Count",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/mapred/MemoryUsed": {
        "metric": "java.nio:type=BufferPool,name=mapped.MemoryUsed",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/mapred/TotalCapacity": {
        "metric": "java.nio:type=BufferPool,name=mapped.TotalCapacity",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/mapred/Name": {
        "metric": "java.nio:type=BufferPool,name=mapped.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/direct/Count": {
        "metric": "java.nio:type=BufferPool,name=direct.Count",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/direct/MemoryUsed": {
        "metric": "java.nio:type=BufferPool,name=direct.MemoryUsed",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/direct/TotalCapacity": {
        "metric": "java.nio:type=BufferPool,name=direct.TotalCapacity",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/BufferPool/direct/Name": {
        "metric": "java.nio:type=BufferPool,name=direct.Name",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/GarbageCollector/MarkSweepCompact/LastGcInfo": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.LastGcInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/CollectionCount": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.CollectionCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/CollectionTime": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.CollectionTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/MemoryPoolNames": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.MemoryPoolNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/Name": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/MarkSweepCompact/Valid": {
        "metric": "java.lang:type=GarbageCollector,name=MarkSweepCompact.Valid",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/LastGcInfo": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.LastGcInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/CollectionCount": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.CollectionCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/CollectionTime": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.CollectionTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/MemoryPoolNames": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.MemoryPoolNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/Name": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/GarbageCollector/Copy/Valid": {
        "metric": "java.lang:type=GarbageCollector,name=Copy.Valid",
        "pointInTime": true,
        "temporal": false
      },



      "metrics/MemoryPool/CodeCache/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/UsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.UsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/UsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.UsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/UsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.UsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/Name": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/Type": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/CodeCache/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Code Cache.Valid",
        "pointInTime": true,
        "temporal": false
      },

      "metrics/MemoryPool/EdenSpace/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/CollectionUsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/CollectionUsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/CollectionUsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.CollectionUsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/Name": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/Type": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/EdenSpace/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Eden Space.Valid",
        "pointInTime": true,
        "temporal": false
      },

      "metrics/MemoryPool/TenuredGen/CollectionUsage": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/CollectionUsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/CollectionUsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/MemoryManagerNames": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.MemoryManagerNames",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/PeakUsage": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.PeakUsage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/Usage": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.Usage",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/UsageThreshold": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.UsageThreshold",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/UsageThresholdCount": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.UsageThresholdCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/CollectionUsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/CollectionUsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.CollectionUsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/UsageThresholdSupported": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.UsageThresholdSupported",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/UsageThresholdExceeded": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.UsageThresholdExceeded",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/Name": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.Name",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/Type": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.Type",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/MemoryPool/TenuredGen/Valid": {
        "metric": "java.lang:type=MemoryPool,name=Tenured Gen.Valid",
        "pointInTime": true,
        "temporal": false
      }
    },
    "RESOURCEMANAGER":{
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsFailed": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsFailed",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapCommittedM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumUnhealthyNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumUnhealthyNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsRunnable": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsRunnable",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsNew": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsNew",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumRebootedNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumRebootedNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsKilled": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsKilled",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationFailures": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AggregateContainersAllocated": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AggregateContainersAllocated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumLostNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumLostNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_avg_time": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcQueueTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_avg_time": {
        "metric": "Hadoop:service=ResourceManager,name=UgiMetrics.LoginSuccessAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ReservedContainers": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ReservedContainers",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsSubmitted": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsSubmitted",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/SentBytes": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.SentBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumActiveNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumActiveNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/running_300": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).running_300",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapUsedM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemNonHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logWarn": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.LogWarn",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTimedWaiting": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsTimedWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcCount": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.GcCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/ReceivedBytes": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.ReceivedBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/HeapMemoryMax":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/HeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryMax":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/NonHeapMemoryUsed":{
        "metric" : "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime" : true,
        "temporal" : false
      },
      "metrics/jvm/threadsBlocked": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsBlocked",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/running_60": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).running_60",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_num_ops": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcQueueTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/ClusterMetrics/NumDecommissionedNMs": {
        "metric": "Hadoop:service=ResourceManager,name=ClusterMetrics.NumDecommissionedNMs",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AllocatedContainers": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AllocatedContainers",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/PendingContainers": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).PendingContainers",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/NumOpenConnections": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.NumOpenConnections",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapUsedM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsWaiting": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcTimeMillis": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.GcTimeMillis",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_num_ops": {
        "metric": "Hadoop:service=ResourceManager,name=UgiMetrics.LoginSuccessNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTerminated": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.ThreadsTerminated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memMaxM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemMaxM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ReservedVCores": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ReservedVCores",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ActiveApplications": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ActiveApplications",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AvailableMB": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AvailableMB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapCommittedM": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.MemNonHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/callQueueLen": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.CallQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsPending": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsPending",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AllocatedVCores": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AllocatedVCores",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsCompleted": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsCompleted",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ActiveUsers": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ActiveUsers",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logInfo": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.LogInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AppsRunning": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AppsRunning",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/running_1440": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).running_1440",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AvailableVCores": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AvailableVCores",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_num_ops": {
        "metric": "Hadoop:service=ResourceManager,name=UgiMetrics.LoginFailureNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_num_ops": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcProcessingTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/ReservedMB": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).ReservedMB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logError": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.LogError",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/PendingMB": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).PendingMB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_avg_time": {
        "metric": "Hadoop:service=ResourceManager,name=UgiMetrics.LoginFailureAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationSuccesses": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcAuthorizationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logFatal": {
        "metric": "Hadoop:service=ResourceManager,name=JvmMetrics.LogFatal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_avg_time": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcProcessingTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationSuccesses": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcAuthenticationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AggregateContainersReleased": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AggregateContainersReleased",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationFailures": {
        "metric": "Hadoop:service=ResourceManager,name=RpcActivity.RpcAuthenticationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/AllocatedMB": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).AllocatedMB",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/yarn/Queue/$1.replaceAll(\",q(\\d+)=\",\"/\").substring(1)/PendingVCores": {
        "metric": "Hadoop:service=ResourceManager,name=QueueMetrics(.+).PendingVCores",
        "pointInTime": true,
        "temporal": false
      }
    },
    "NODEMANAGER":{
      "metrics/jvm/memHeapCommittedM": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.MemHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsRunnable": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.ThreadsRunnable",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsNew": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.ThreadsNew",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapCommittedM": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.MemNonHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/callQueueLen": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.CallQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationFailures": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_avg_time": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.RpcQueueTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_avg_time": {
        "metric": "Hadoop:service=NodeManager,name=UgiMetrics.LoginSuccessAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/SentBytes": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.SentBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logInfo": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.LogInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapUsedM": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.MemNonHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logWarn": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.LogWarn",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_num_ops": {
        "metric": "Hadoop:service=NodeManager,name=UgiMetrics.LoginFailureNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTimedWaiting": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.ThreadsTimedWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_num_ops": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.RpcProcessingTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcCount": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.GcCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/ReceivedBytes": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.ReceivedBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsBlocked": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.ThreadsBlocked",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_num_ops": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.RpcQueueTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logError": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.LogError",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_avg_time": {
        "metric": "Hadoop:service=NodeManager,name=UgiMetrics.LoginFailureAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationSuccesses": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.RpcAuthorizationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/NumOpenConnections": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.NumOpenConnections",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapUsedM": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.MemHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logFatal": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.LogFatal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_avg_time": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.RpcProcessingTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsWaiting": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.ThreadsWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcTimeMillis": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.GcTimeMillis",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_num_ops": {
        "metric": "Hadoop:service=NodeManager,name=UgiMetrics.LoginSuccessNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationSuccesses": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.RpcAuthenticationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationFailures": {
        "metric": "Hadoop:service=NodeManager,name=RpcActivity.RpcAuthenticationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTerminated": {
        "metric": "Hadoop:service=NodeManager,name=JvmMetrics.ThreadsTerminated",
        "pointInTime": true,
        "temporal": false
      }
    },
    "JOURNALNODE":{
      "metrics/jvm/memHeapCommittedM": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.MemHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/NonHeapMemoryUsed": {
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[used]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsRunnable": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.ThreadsRunnable",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs300s95thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs300s95thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsNew": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.ThreadsNew",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/finalizeLogSegment_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.FinalizeLogSegmentNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationFailures": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.RpcAuthorizationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=UgiMetrics.LoginSuccessAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.RpcQueueTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/startLogSegment_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.StartLogSegmentAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/lastWriterEpoch": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).LastWriterEpoch",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getEditLogManifest_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.GetEditLogManifestAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/SentBytes": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.SentBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapUsedM": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.MemNonHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs60s_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs60sNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logWarn": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.LogWarn",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs3600s50thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs3600s50thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTimedWaiting": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.ThreadsTimedWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcCount": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.GcCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs3600s95thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs3600s95thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/acceptRecovery_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.AcceptRecoveryNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/ReceivedBytes": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.ReceivedBytes",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs3600s99thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs3600s99thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsBlocked": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.ThreadsBlocked",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/lastWrittenTxId": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).LastWrittenTxId",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcQueueTime_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.RpcQueueTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/HeapMemoryMax": {
        "metric": "java.lang:type=Memory.HeapMemoryUsage[max]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/HeapMemoryUsed": {
        "metric": "java.lang:type=Memory.HeapMemoryUsage[used]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/newEpoch_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.NewEpochNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs60s75thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs60s75thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/NumOpenConnections": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.NumOpenConnections",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memHeapUsedM": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.MemHeapUsedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/prepareRecovery_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.PrepareRecoveryNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/batchesWrittenWhileLagging": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).BatchesWrittenWhileLagging",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsWaiting": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.ThreadsWaiting",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/newEpoch_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.NewEpochAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginSuccess_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=UgiMetrics.LoginSuccessNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/gcTimeMillis": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.GcTimeMillis",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs300s75thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs300s75thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/threadsTerminated": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.ThreadsTerminated",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memMaxM": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.MemMaxM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs300s_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs300sNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs300s50thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs300s50thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getJournalState_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.GetJournalStateAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/lastPromisedEpoch": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).LastPromisedEpoch",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/startTime": {
        "metric": "java.lang:type=Runtime.StartTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs60s95thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs60s95thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/journalsStatus": {
        "metric": "Hadoop:service=JournalNode,name=JournalNodeInfo.JournalsStatus",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/memNonHeapCommittedM": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.MemNonHeapCommittedM",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs60s50thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs60s50thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/callQueueLen": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.CallQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/journal_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.JournalAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs3600s75thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs3600s75thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/finalizeLogSegment_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.FinalizeLogSegmentAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs3600s90thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs3600s90thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/batchesWritten": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).BatchesWritten",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/startLogSegment_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.StartLogSegmentNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs60s90thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs60s90thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs3600s_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs3600sNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/prepareRecovery_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.PrepareRecoveryAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logInfo": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.LogInfo",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getJournalState_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.GetJournalStateNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/currentLagTxns": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).CurrentLagTxns",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.RpcProcessingTimeNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=UgiMetrics.LoginFailureNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/getEditLogManifest_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.GetEditLogManifestNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs300s99thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs300s99thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/NonHeapMemoryMax": {
        "metric": "java.lang:type=Memory.NonHeapMemoryUsage[max]",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs300s90thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs300s90thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/acceptRecovery_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.AcceptRecoveryAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logError": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.LogError",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/ugi/loginFailure_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=UgiMetrics.LoginFailureAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/syncs60s99thPercentileLatencyMicros": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).Syncs60s99thPercentileLatencyMicros",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpcdetailed/journal_num_ops": {
        "metric": "Hadoop:service=JournalNode,name=RpcDetailedActivity.JournalNumOps",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthorizationSuccesses": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.RpcAuthorizationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/txnsWritten": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).TxnsWritten",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/jvm/logFatal": {
        "metric": "Hadoop:service=JournalNode,name=JvmMetrics.LogFatal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/RpcProcessingTime_avg_time": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.RpcProcessingTimeAvgTime",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationSuccesses": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.RpcAuthenticationSuccesses",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/rpc/rpcAuthenticationFailures": {
        "metric": "Hadoop:service=JournalNode,name=RpcActivity.RpcAuthenticationFailures",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/dfs/journalnode/cluster/$1.replaceAll(\"^-\",\"\")/bytesWritten": {
        "metric": "Hadoop:service=JournalNode,name=Journal(-.+).BytesWritten",
        "pointInTime": true,
        "temporal": false
      }
    },
    "HBASE_REGIONSERVER":{
      "metrics/hbase/regionserver/slowPutCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowPutCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/percentFilesLocal": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.percentFilesLocal",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_min": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_min",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheFree": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheFreeSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/mutationsWithoutWALSize": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.mutationsWithoutWALSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheMissCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheMissCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/flushQueueSize": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.flushQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_99th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_99th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_num_ops": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/slowAppendCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowAppendCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheSize": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_num_ops": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/slowIncrementCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowIncrementCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheEvictedCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheEvictionCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_95th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_95th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/compactionQueueSize": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.compactionQueueLength",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_median": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_median",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_mean": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_mean",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/slowGetCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowGetCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_75th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_75th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/readRequestsCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.readRequestCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_min": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_min",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/storefileIndexSizeMB": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeFileIndexSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_median": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_median",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_max": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_max",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/totalStaticIndexSizeKB": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.staticIndexSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_num_ops": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_num_ops",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_mean": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_mean",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/requests": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.totalRequestCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/storefiles": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeFileCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/mutationsWithoutWALCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.mutationsWithoutWALCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/writeRequestsCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.writeRequestCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_median": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_median",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/slowDeleteCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowDeleteCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_99th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_99th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/stores": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_min": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_min",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_95th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_95th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_95th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_95th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/memstoreSizeMB": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.memStoreSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_max": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_max",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_mean": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_mean",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_75th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_75th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/deleteRequestLatency_max": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_max",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/putRequestLatency_75th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_75th_percentile",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/regions": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.regionCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/totalStaticBloomSizeKB": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.staticBloomSize",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/blockCacheHitCount": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheHitCount",
        "pointInTime": true,
        "temporal": false
      },
      "metrics/hbase/regionserver/getRequestLatency_99th_percentile": {
        "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_99th_percentile",
        "pointInTime": true,
        "temporal": false
      }
    }
  }
}
